//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentManager
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAS_StudentsEntities : DbContext
    {
        public BAS_StudentsEntities()
            : base("name=BAS_StudentsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AttendedCollege> AttendedColleges { get; set; }
        public virtual DbSet<BAS_StatusLookup> BAS_StatusLookup { get; set; }
        public virtual DbSet<College> Colleges { get; set; }
        public virtual DbSet<CourseEnrollment> CourseEnrollments { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<CourseTypeLookUp> CourseTypeLookUps { get; set; }
        public virtual DbSet<CreditSectionLookUp> CreditSectionLookUps { get; set; }
        public virtual DbSet<EduBackgroundLookup> EduBackgroundLookups { get; set; }
        public virtual DbSet<Employer> Employers { get; set; }
        public virtual DbSet<EmploymentStatu> EmploymentStatus { get; set; }
        public virtual DbSet<EmploymentStatusLookUp> EmploymentStatusLookUps { get; set; }
        public virtual DbSet<EnrollmentStatusLookUp> EnrollmentStatusLookUps { get; set; }
        public virtual DbSet<JobTitleLookUp> JobTitleLookUps { get; set; }
        public virtual DbSet<PreferredContactLookup> PreferredContactLookups { get; set; }
        public virtual DbSet<ReferralTypeLookup> ReferralTypeLookups { get; set; }
        public virtual DbSet<StudentDetail> StudentDetails { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<TechInterest> TechInterests { get; set; }
    
        public virtual int CheckForDuplicateCourseNumberOrItem(string courseNumber, string courseItemNumber, ObjectParameter rowCount)
        {
            var courseNumberParameter = courseNumber != null ?
                new ObjectParameter("CourseNumber", courseNumber) :
                new ObjectParameter("CourseNumber", typeof(string));
    
            var courseItemNumberParameter = courseItemNumber != null ?
                new ObjectParameter("CourseItemNumber", courseItemNumber) :
                new ObjectParameter("CourseItemNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckForDuplicateCourseNumberOrItem", courseNumberParameter, courseItemNumberParameter, rowCount);
        }
    
        public virtual int DeleteCollegeWithID(Nullable<int> collegeID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCollegeWithID", collegeIDParameter);
        }
    
        public virtual int DeleteCourseWithID(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCourseWithID", courseIDParameter);
        }
    
        public virtual int DeleteEmployerWithID(Nullable<int> employerID)
        {
            var employerIDParameter = employerID.HasValue ?
                new ObjectParameter("EmployerID", employerID) :
                new ObjectParameter("EmployerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployerWithID", employerIDParameter);
        }
    
        public virtual int DeleteJobTitleWithID(Nullable<int> jobTitleID)
        {
            var jobTitleIDParameter = jobTitleID.HasValue ?
                new ObjectParameter("JobTitleID", jobTitleID) :
                new ObjectParameter("JobTitleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteJobTitleWithID", jobTitleIDParameter);
        }
    
        public virtual ObjectResult<GetBASGraduates_Result> GetBASGraduates(Nullable<int> yearStart, Nullable<int> yearEnd)
        {
            var yearStartParameter = yearStart.HasValue ?
                new ObjectParameter("YearStart", yearStart) :
                new ObjectParameter("YearStart", typeof(int));
    
            var yearEndParameter = yearEnd.HasValue ?
                new ObjectParameter("YearEnd", yearEnd) :
                new ObjectParameter("YearEnd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBASGraduates_Result>("GetBASGraduates", yearStartParameter, yearEndParameter);
        }
    
        public virtual ObjectResult<GetLastUpdatedStudentDetails_Result> GetLastUpdatedStudentDetails(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("studentID", studentID) :
                new ObjectParameter("studentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastUpdatedStudentDetails_Result>("GetLastUpdatedStudentDetails", studentIDParameter);
        }
    
        public virtual ObjectResult<GetStudentByID_Result> GetStudentByID(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("studentID", studentID) :
                new ObjectParameter("studentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentByID_Result>("GetStudentByID", studentIDParameter);
        }
    
        public virtual ObjectResult<GetStudentDetails_Result> GetStudentDetails(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDetails_Result>("GetStudentDetails", studentIDParameter);
        }
    
        public virtual ObjectResult<GetStudentEnrollmentData_Result> GetStudentEnrollmentData(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentEnrollmentData_Result>("GetStudentEnrollmentData", studentIDParameter);
        }
    
        public virtual ObjectResult<StudentsWhoHaveCompletedClass_Result> StudentsWhoHaveCompletedClass(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentsWhoHaveCompletedClass_Result>("StudentsWhoHaveCompletedClass", courseIDParameter);
        }
    
        public virtual ObjectResult<StudentsWhoNeedToCompleteClass_Result> StudentsWhoNeedToCompleteClass(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentsWhoNeedToCompleteClass_Result>("StudentsWhoNeedToCompleteClass", courseIDParameter);
        }
    
        public virtual ObjectResult<StudentsWithPreReqsLeft_Result> StudentsWithPreReqsLeft()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentsWithPreReqsLeft_Result>("StudentsWithPreReqsLeft");
        }
    
        public virtual ObjectResult<Nullable<int>> TimesEnrolledInOrCompletedCourse(Nullable<int> studentID, Nullable<int> courseID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TimesEnrolledInOrCompletedCourse", studentIDParameter, courseIDParameter);
        }
    }
}
